<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fireengineering.management.mapper.PlaceMapper" >
  <resultMap id="BaseResultMap" type="com.fireengineering.management.po.Place" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="project_id" property="projectId" jdbcType="INTEGER" />
    <result column="district" property="district" jdbcType="VARCHAR" />
    <result column="building" property="building" jdbcType="VARCHAR" />
    <result column="floor" property="floor" jdbcType="VARCHAR" />
    <result column="note" property="note" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="PlaceProjectMap" type="com.fireengineering.management.po.Place" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="district" property="district" jdbcType="VARCHAR" />
    <result column="building" property="building" jdbcType="INTEGER" />
    <result column="floor" property="floor" jdbcType="VARCHAR" />
    <association property="project" javaType="com.fireengineering.management.po.Project">
      <!--<id column="fid" property="id"></id>-->
      <result column="pname" property="name"></result>
    </association>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, project_id, district, building, floor, note
  </sql>

  <select id="selectByLimitAndOffset" resultMap="PlaceProjectMap">
    select project.name pname, place.*
    from place, project
    where place.project_id=project.id
    limit #{offset}, #{limit}
  </select>
  <select id="selectByName" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from place
    where name=#{placeName}
  </select>

  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.fireengineering.management.po.PlaceExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from place
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from place
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from place
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.fireengineering.management.po.PlaceExample" >
    delete from place
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fireengineering.management.po.Place" >
    insert into place (id, project_id, district, 
      building, floor, note
      )
    values (#{id,jdbcType=INTEGER}, #{projectId,jdbcType=INTEGER}, #{district,jdbcType=VARCHAR}, 
      #{building,jdbcType=VARCHAR}, #{floor,jdbcType=VARCHAR}, #{note,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.fireengineering.management.po.Place" >
    insert into place
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="projectId != null" >
        project_id,
      </if>
      <if test="district != null" >
        district,
      </if>
      <if test="building != null" >
        building,
      </if>
      <if test="floor != null" >
        floor,
      </if>
      <if test="note != null" >
        note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="projectId != null" >
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="district != null" >
        #{district,jdbcType=VARCHAR},
      </if>
      <if test="building != null" >
        #{building,jdbcType=VARCHAR},
      </if>
      <if test="floor != null" >
        #{floor,jdbcType=VARCHAR},
      </if>
      <if test="note != null" >
        #{note,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fireengineering.management.po.PlaceExample" resultType="java.lang.Integer" >
    select count(*) from place
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update place
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.projectId != null" >
        project_id = #{record.projectId,jdbcType=INTEGER},
      </if>
      <if test="record.district != null" >
        district = #{record.district,jdbcType=VARCHAR},
      </if>
      <if test="record.building != null" >
        building = #{record.building,jdbcType=VARCHAR},
      </if>
      <if test="record.floor != null" >
        floor = #{record.floor,jdbcType=VARCHAR},
      </if>
      <if test="record.note != null" >
        note = #{record.note,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update place
    set id = #{record.id,jdbcType=INTEGER},
      project_id = #{record.projectId,jdbcType=INTEGER},
      district = #{record.district,jdbcType=VARCHAR},
      building = #{record.building,jdbcType=VARCHAR},
      floor = #{record.floor,jdbcType=VARCHAR},
      note = #{record.note,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fireengineering.management.po.Place" >
    update place
    <set >
      <if test="projectId != null" >
        project_id = #{projectId,jdbcType=INTEGER},
      </if>
      <if test="district != null" >
        district = #{district,jdbcType=VARCHAR},
      </if>
      <if test="building != null" >
        building = #{building,jdbcType=VARCHAR},
      </if>
      <if test="floor != null" >
        floor = #{floor,jdbcType=VARCHAR},
      </if>
      <if test="note != null" >
        note = #{note,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fireengineering.management.po.Place" >
    update place
    set project_id = #{projectId,jdbcType=INTEGER},
      district = #{district,jdbcType=VARCHAR},
      building = #{building,jdbcType=VARCHAR},
      floor = #{floor,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>