<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fireengineering.management.mapper.MaintenanceMapper" >
  <resultMap id="BaseResultMap" type="com.fireengineering.management.po.Maintenance" >
    <id column="maintenance_id" property="maintenanceId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="device_id" property="deviceId" jdbcType="VARCHAR" />
    <result column="deployment_id" property="deploymentId" jdbcType="VARCHAR" />
    <result column="maintenance_record" property="maintenanceRecord" jdbcType="VARCHAR" />
    <result column="maintenance_desc" property="maintenanceDesc" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    maintenance_id, user_id, device_id, deployment_id, maintenance_record, maintenance_desc
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.fireengineering.management.po.MaintenanceExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from maintenance
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from maintenance
    where maintenance_id = #{maintenanceId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from maintenance
    where maintenance_id = #{maintenanceId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.fireengineering.management.po.MaintenanceExample" >
    delete from maintenance
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fireengineering.management.po.Maintenance" >
    insert into maintenance (maintenance_id, user_id, device_id, 
      deployment_id, maintenance_record, maintenance_desc
      )
    values (#{maintenanceId,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{deviceId,jdbcType=VARCHAR}, 
      #{deploymentId,jdbcType=VARCHAR}, #{maintenanceRecord,jdbcType=VARCHAR}, #{maintenanceDesc,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.fireengineering.management.po.Maintenance" >
    insert into maintenance
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="maintenanceId != null" >
        maintenance_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="deviceId != null" >
        device_id,
      </if>
      <if test="deploymentId != null" >
        deployment_id,
      </if>
      <if test="maintenanceRecord != null" >
        maintenance_record,
      </if>
      <if test="maintenanceDesc != null" >
        maintenance_desc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="maintenanceId != null" >
        #{maintenanceId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="deviceId != null" >
        #{deviceId,jdbcType=VARCHAR},
      </if>
      <if test="deploymentId != null" >
        #{deploymentId,jdbcType=VARCHAR},
      </if>
      <if test="maintenanceRecord != null" >
        #{maintenanceRecord,jdbcType=VARCHAR},
      </if>
      <if test="maintenanceDesc != null" >
        #{maintenanceDesc,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fireengineering.management.po.MaintenanceExample" resultType="java.lang.Integer" >
    select count(*) from maintenance
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update maintenance
    <set >
      <if test="record.maintenanceId != null" >
        maintenance_id = #{record.maintenanceId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.deviceId != null" >
        device_id = #{record.deviceId,jdbcType=VARCHAR},
      </if>
      <if test="record.deploymentId != null" >
        deployment_id = #{record.deploymentId,jdbcType=VARCHAR},
      </if>
      <if test="record.maintenanceRecord != null" >
        maintenance_record = #{record.maintenanceRecord,jdbcType=VARCHAR},
      </if>
      <if test="record.maintenanceDesc != null" >
        maintenance_desc = #{record.maintenanceDesc,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update maintenance
    set maintenance_id = #{record.maintenanceId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=VARCHAR},
      device_id = #{record.deviceId,jdbcType=VARCHAR},
      deployment_id = #{record.deploymentId,jdbcType=VARCHAR},
      maintenance_record = #{record.maintenanceRecord,jdbcType=VARCHAR},
      maintenance_desc = #{record.maintenanceDesc,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fireengineering.management.po.Maintenance" >
    update maintenance
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="deviceId != null" >
        device_id = #{deviceId,jdbcType=VARCHAR},
      </if>
      <if test="deploymentId != null" >
        deployment_id = #{deploymentId,jdbcType=VARCHAR},
      </if>
      <if test="maintenanceRecord != null" >
        maintenance_record = #{maintenanceRecord,jdbcType=VARCHAR},
      </if>
      <if test="maintenanceDesc != null" >
        maintenance_desc = #{maintenanceDesc,jdbcType=VARCHAR},
      </if>
    </set>
    where maintenance_id = #{maintenanceId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fireengineering.management.po.Maintenance" >
    update maintenance
    set user_id = #{userId,jdbcType=VARCHAR},
      device_id = #{deviceId,jdbcType=VARCHAR},
      deployment_id = #{deploymentId,jdbcType=VARCHAR},
      maintenance_record = #{maintenanceRecord,jdbcType=VARCHAR},
      maintenance_desc = #{maintenanceDesc,jdbcType=VARCHAR}
    where maintenance_id = #{maintenanceId,jdbcType=INTEGER}
  </update>
</mapper>